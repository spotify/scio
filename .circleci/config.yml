####################
# Templates
####################

scala_211_version: &scala_211_version 2.11.12
scala_212_version: &scala_212_version 2.12.5

docker_settings: &docker_settings
  docker:
    - image: circleci/openjdk:8-jdk
      environment:
        SBT_OPTS: "-Xms2g -Xmx2g"
        GOOGLE_APPLICATION_CREDENTIALS: scripts/data-integration-test.json
  working_directory: ~/scio

restore_cache_settings: &restore_cache_settings
  keys:
    - scio-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-{{ checksum "build.sbt" }}
    - scio-{{ .Environment.CIRCLE_JOB }}-

save_cache_settings: &save_cache_settings
  key: scio-{{ .Environment.CIRCLE_JOB }}-{{ .Branch }}-{{ checksum "build.sbt" }}
  paths:
    - ~/.ivy2
    - ~/.sbt
    - ~/resolution-cache.tar.gz
    - ~/stream.tar.gz

build_settings: &build_settings
  <<: *docker_settings
  steps:
    - checkout
    - restore_cache: *restore_cache_settings
    - run: if [ "$CIRCLE_BRANCH" == "beam-master" ]; then ./scripts/circleci_snapshot.sh; fi
    - run:
        name: Unpacking sbt cache
        command: |
          find ~ -maxdepth 1 -name "*.tar.gz"
          if [ -f ~/resolution-cache.tar.gz ]; then tar xzf ~/resolution-cache.tar.gz; fi
          if [ -f ~/stream.tar.gz ]; then tar xzf ~/stream.tar.gz; fi
    - run: ./scripts/circleci_test.sh
    - run: ./scripts/circleci_repl.sh
    - run:
        name: Packing sbt cache
        command: |
          find ~/.sbt -name "*.lock" -delete
          find ~/.ivy2 -name "ivydata-*.properties" -delete
          tar czf ~/resolution-cache.tar.gz $(find . -type d -name resolution-cache)
          tar czf ~/stream.tar.gz $(find . -type d -path "*/target/streams")
          find ~ -maxdepth 1 -name "*.tar.gz"
    - run: if [ $SCOVERAGE -eq 1 ]; then bash <(curl -s https://codecov.io/bash); fi
    - save_cache: *save_cache_settings

publish_settings: &publish_settings
  <<: *docker_settings
  steps:
    - checkout
    - restore_cache: *restore_cache_settings
    - run: sbt ++$SCALA_VERSION publish

####################
# Jobs
####################

version: 2
jobs:
  build_211:
    <<: *build_settings
    environment:
      - SCALA_VERSION: *scala_211_version
      - SCOVERAGE: 0

  build_212:
    <<: *build_settings
    environment:
      - SCALA_VERSION: *scala_212_version
      - SCOVERAGE: 1

  deploy:
    # Workaround for sbt-assembly hitting Docker aufs file name length limit
    # https://github.com/sbt/sbt-assembly/issues/69
    machine: true
    working_directory: ~/scio
    environment:
      - SCALA_VERSION: *scala_211_version
    steps:
      - checkout
      - restore_cache:
          keys:
            - scio-build_211-{{ .Branch }}-{{ checksum "build.sbt" }}
            - scio-build_211-
      - run: sbt ++$SCALA_VERSION scio-repl/assembly
      - run: go get -u github.com/tcnksm/ghr
      - run: ghr -u spotify -draft $CIRCLE_TAG scio-repl/target/scala-*/scio-repl-*.jar

  publish_211:
    <<: *publish_settings
    environment:
      - SCALA_VERSION: *scala_211_version

  publish_212:
    <<: *publish_settings
    environment:
      - SCALA_VERSION: *scala_212_version

####################
# Workflows
####################

workflows:
  version: 2

  # Per commit build
  build:
    jobs:
      - build_211:
          filters:
            tags:
              only: /.*/
      - build_212:
          filters:
            tags:
              only: /.*/
      - deploy:
          requires:
            - build_211
            - build_212
          filters:
            tags:
              only: /^v.*/
            branches:
              ignore: /.*/

  # Nightly build to publish Scio SNAPSHOTs
  publish:
    triggers:
      - schedule:
          cron: "0 0 * * *"
          filters:
            branches:
              only:
                - master
    jobs:
      - publish_211
      - publish_212

  # Nightly build with latest Beam SNAPSHOTs
  snapshot:
    triggers:
      - schedule:
          cron: "0 12 * * *"
          filters:
            branches:
              only:
                - beam-master
    jobs:
      - build_211
      - build_212
